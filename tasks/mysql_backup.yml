---

- name: Install backup tools
  apt:
    name: 
      - percona-xtrabackup-80=8.0.34-29-1.focal
      - zstd
      - s3cmd
      - s3fs
    state: present
    update_cache: true


- name: Copy backup script
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: "{{ item.mode }}"
  loop:
    - { src: 'mysql-backup.sh.j2', dest: '/usr/sbin/mysql-backup.sh', mode: '0700'}


- name: Create backup dirs
  file:
    path: "{{ item.path }}"
    state: directory
    mode: "{{ item.mode }}"
    owner: root
    group: root
  loop:
    - { path: '/opt/mysql-backup', mode: '0600' }
    - { path: '/var/log/mysql-backup/', mode: '0644' }


- name: Copy S3 secrets & scripts
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: "{{ item.mode }}"
  loop:
    - { src: 'passwd-s3fs', dest: '/etc/passwd-s3fs', mode: '0600'}
    - { src: 'passwd-s3fs', dest: '/root/.passwd-s3fs', mode: '0600'}
  when: percona_mysql_s3_backup == true


- name: Mount and bind a volume
  ansible.posix.mount:
    path: /opt/mysql-backup/
    src: "{{ percona_mysql_s3_backup_bucket_name }}"
    opts: "_netdev,allow_other,use_path_request_style,url={{ percona_mysql_s3_backup_url }},mp_umask=0177,umask=0177"
    state: mounted
    fstype: fuse.s3fs
    backup: yes 
  when: percona_mysql_s3_backup == true


- name: Create backub jobs 
  cron:
    name: "{{ item.name }}"
    hour: "{{ item.hour }}"
    minute: "{{ item.minute }}"
    job: "{{ item.job }}"
    user: root
  loop:
    - { name: 'mysql full backup', hour: '{{ percona_mysql_backup_full_hour }}', minute: '{{ percona_mysql_backup_full_minute }}', job: '/usr/sbin/mysql-backup.sh full >> /var/log/mysql-backup/full.log 2>&1'}
    - { name: 'mysql incremental backup', hour: '{{ percona_mysql_backup_inc_hour }}', minute: '{{ percona_mysql_backup_inc_minute }}', job: '/usr/sbin/mysql-backup.sh incremental >> /var/log/mysql-backup/incremental.log 2>&1'}


- name: Copy logrotate config
  copy:
    src: mysql-backup.logrotate
    dest: /etc/logrotate.d/mysql-backup
    owner: root
    group: root
    mode: 0644
